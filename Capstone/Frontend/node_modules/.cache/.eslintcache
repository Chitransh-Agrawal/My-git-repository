[{"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\index.js":"1","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\App.js":"2","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\index.js":"3","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\routeConstants.js":"4","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\Routes.js":"5","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\routeUtils.js":"6","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\ProtectedRoute.js":"7","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\contexts\\auth\\index.js":"8","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\notfound\\index.js":"9","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\contexts\\auth\\authConstants.js":"10","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\notfound\\NotFoundPage.js":"11","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\contexts\\auth\\AuthContext.js":"12","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useTabs.js":"13","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useNotification.js":"14","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useLoader.js":"15","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\userApi.js":"16","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\edit\\index.js":"17","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\add\\index.js":"18","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\list\\index.js":"19","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\index.js":"20","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\details\\index.js":"21","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\summary\\index.js":"22","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\checkout\\index.js":"23","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\home\\index.js":"24","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\utils\\index.js":"25","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\edit\\EditPage.js":"26","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\add\\AddPage.js":"27","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\list\\ListPage.js":"28","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\OnboardPage.js":"29","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\summary\\SummaryPage.js":"30","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\details\\DetailsPage.js":"31","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\checkout\\CheckoutPage.js":"32","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\home\\HomePage.js":"33","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\utils\\utils.js":"34","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\utils\\constants.js":"35","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\utils-api\\index.js":"36","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\styles\\formStyles.js":"37","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Loader\\index.js":"38","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSnackbar\\index.js":"39","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\validateCourseForm.js":"40","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\coursesApi.js":"41","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\checkout\\validateCheckoutForm.js":"42","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\styles.js":"43","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\index.js":"44","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\utils-api\\apiConstants.js":"45","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Footer\\index.js":"46","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiPrimarySearchAppBar\\index.js":"47","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\utils-api\\utilsApi.js":"48","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Loader\\Loader.js":"49","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSnackbar\\MuiSnackbar.js":"50","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiCard\\index.js":"51","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSingleLineGridList\\index.js":"52","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useForm.js":"53","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Footer\\Footer.js":"54","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\index.js":"55","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiPrimarySearchAppBar\\MuiPrimarySearchAppBar.js":"56","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\axiosConfig.js":"57","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\index.js":"58","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiCard\\MuiCard.js":"59","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSingleLineGridList\\SingleLineGridList.js":"60","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiCard\\styles.js":"61","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\LoginForm.js":"62","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSingleLineGridList\\styles.js":"63","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiPrimarySearchAppBar\\styles.js":"64","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\SignupForm.js":"65","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabs.js":"66","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\styles.js":"67","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\validateLoginForm.js":"68","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\validateSignupForm.js":"69","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabPanel\\index.js":"70","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabPanel\\MuiTabPanel.js":"71","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabPanel\\styles.js":"72"},{"size":219,"mtime":1620616185000,"results":"73","hashOfConfig":"74"},{"size":879,"mtime":1620616185000,"results":"75","hashOfConfig":"74"},{"size":204,"mtime":1620616185000,"results":"76","hashOfConfig":"74"},{"size":258,"mtime":1636282738230,"results":"77","hashOfConfig":"74"},{"size":2725,"mtime":1620616185000,"results":"78","hashOfConfig":"74"},{"size":353,"mtime":1620616185000,"results":"79","hashOfConfig":"74"},{"size":1508,"mtime":1620616185000,"results":"80","hashOfConfig":"74"},{"size":81,"mtime":1620616185000,"results":"81","hashOfConfig":"74"},{"size":58,"mtime":1620616185000,"results":"82","hashOfConfig":"74"},{"size":59,"mtime":1620616185000,"results":"83","hashOfConfig":"74"},{"size":452,"mtime":1620616185000,"results":"84","hashOfConfig":"74"},{"size":4873,"mtime":1620616185000,"results":"85","hashOfConfig":"74"},{"size":310,"mtime":1620616185000,"results":"86","hashOfConfig":"74"},{"size":890,"mtime":1620616185000,"results":"87","hashOfConfig":"74"},{"size":454,"mtime":1620616185000,"results":"88","hashOfConfig":"74"},{"size":2672,"mtime":1636276961137,"results":"89","hashOfConfig":"74"},{"size":50,"mtime":1620616185000,"results":"90","hashOfConfig":"74"},{"size":48,"mtime":1620616185000,"results":"91","hashOfConfig":"74"},{"size":50,"mtime":1620616185000,"results":"92","hashOfConfig":"74"},{"size":56,"mtime":1620616185000,"results":"93","hashOfConfig":"74"},{"size":56,"mtime":1620616185000,"results":"94","hashOfConfig":"74"},{"size":56,"mtime":1620616185000,"results":"95","hashOfConfig":"74"},{"size":58,"mtime":1620616185000,"results":"96","hashOfConfig":"74"},{"size":50,"mtime":1620616185000,"results":"97","hashOfConfig":"74"},{"size":67,"mtime":1620616185000,"results":"98","hashOfConfig":"74"},{"size":14312,"mtime":1621566617000,"results":"99","hashOfConfig":"74"},{"size":13257,"mtime":1621557835000,"results":"100","hashOfConfig":"74"},{"size":7221,"mtime":1621557294000,"results":"101","hashOfConfig":"74"},{"size":1850,"mtime":1620616185000,"results":"102","hashOfConfig":"74"},{"size":5281,"mtime":1620616185000,"results":"103","hashOfConfig":"74"},{"size":7681,"mtime":1621569294000,"results":"104","hashOfConfig":"74"},{"size":8057,"mtime":1620616185000,"results":"105","hashOfConfig":"74"},{"size":6217,"mtime":1621563544000,"results":"106","hashOfConfig":"74"},{"size":4073,"mtime":1620616185000,"results":"107","hashOfConfig":"74"},{"size":204,"mtime":1620616185000,"results":"108","hashOfConfig":"74"},{"size":88,"mtime":1620616185000,"results":"109","hashOfConfig":"74"},{"size":659,"mtime":1620616185000,"results":"110","hashOfConfig":"74"},{"size":46,"mtime":1620616185000,"results":"111","hashOfConfig":"74"},{"size":56,"mtime":1620616185000,"results":"112","hashOfConfig":"74"},{"size":3007,"mtime":1620616185000,"results":"113","hashOfConfig":"74"},{"size":6204,"mtime":1636277019310,"results":"114","hashOfConfig":"74"},{"size":1665,"mtime":1620616185000,"results":"115","hashOfConfig":"74"},{"size":726,"mtime":1620616185000,"results":"116","hashOfConfig":"74"},{"size":164,"mtime":1620616185000,"results":"117","hashOfConfig":"74"},{"size":727,"mtime":1621563230000,"results":"118","hashOfConfig":"74"},{"size":46,"mtime":1620616185000,"results":"119","hashOfConfig":"74"},{"size":78,"mtime":1620616185000,"results":"120","hashOfConfig":"74"},{"size":2946,"mtime":1620616185000,"results":"121","hashOfConfig":"74"},{"size":203,"mtime":1620616185000,"results":"122","hashOfConfig":"74"},{"size":1060,"mtime":1620616185000,"results":"123","hashOfConfig":"74"},{"size":48,"mtime":1620616185000,"results":"124","hashOfConfig":"74"},{"size":67,"mtime":1620616185000,"results":"125","hashOfConfig":"74"},{"size":1628,"mtime":1620616185000,"results":"126","hashOfConfig":"74"},{"size":1524,"mtime":1620616185000,"results":"127","hashOfConfig":"74"},{"size":106,"mtime":1620616185000,"results":"128","hashOfConfig":"74"},{"size":9391,"mtime":1636281894835,"results":"129","hashOfConfig":"74"},{"size":568,"mtime":1620616185000,"results":"130","hashOfConfig":"74"},{"size":48,"mtime":1620616185000,"results":"131","hashOfConfig":"74"},{"size":1926,"mtime":1620616185000,"results":"132","hashOfConfig":"74"},{"size":1628,"mtime":1620616185000,"results":"133","hashOfConfig":"74"},{"size":1036,"mtime":1620616185000,"results":"134","hashOfConfig":"74"},{"size":3574,"mtime":1620616185000,"results":"135","hashOfConfig":"74"},{"size":602,"mtime":1620616185000,"results":"136","hashOfConfig":"74"},{"size":2234,"mtime":1620616185000,"results":"137","hashOfConfig":"74"},{"size":5093,"mtime":1620616185000,"results":"138","hashOfConfig":"74"},{"size":1567,"mtime":1620616185000,"results":"139","hashOfConfig":"74"},{"size":288,"mtime":1620616185000,"results":"140","hashOfConfig":"74"},{"size":493,"mtime":1620616185000,"results":"141","hashOfConfig":"74"},{"size":1082,"mtime":1620616185000,"results":"142","hashOfConfig":"74"},{"size":56,"mtime":1620616185000,"results":"143","hashOfConfig":"74"},{"size":781,"mtime":1620616185000,"results":"144","hashOfConfig":"74"},{"size":180,"mtime":1620616185000,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"qjkypc",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"148"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"148"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"148"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\index.js",[],["298","299"],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\App.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\routeConstants.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\Routes.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\routeUtils.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\routes\\ProtectedRoute.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\contexts\\auth\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\notfound\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\contexts\\auth\\authConstants.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\notfound\\NotFoundPage.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\contexts\\auth\\AuthContext.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useTabs.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useNotification.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useLoader.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\userApi.js",["300"],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\edit\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\add\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\list\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\details\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\summary\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\checkout\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\home\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\utils\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\edit\\EditPage.js",["301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { Fragment, useState, useEffect } from \"react\";\n\n// imports for 3rd party libraries\nimport { useHistory } from \"react-router-dom\";\n\n// imports for routes\nimport * as routeConstants from \"../../../routes/routeConstants\";\n\n// imports for MUI components\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\";\n\n// imports for components from MUI library\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport Button from \"@material-ui/core/Button\";\n\n// imports for custom components\nimport { Footer } from \"../../../components/UI/Footer\";\n\n// imports for custom hooks\nimport { useForm } from \"../../../hooks\";\nimport validateCourseForm from \"../validateCourseForm\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport useNotification from \"../../../hooks/useNotification\";\n\n// imports for APIs\nimport * as coursesApi from \"../../../api/coursesApi\";\n\n// imports for styles\nimport classes from \"../Course.module.css\";\nimport { useStyles } from \"../../../styles/formStyles\";\n\nconst EditPage = (props) => {\n  // merging all styles imported\n  const cssClasses = { ...classes, ...useStyles() };\n\n  const history = useHistory();\n  const { loader, isLoading, showLoader, hideLoader } = useLoader();\n  const { notification, showNotification } = useNotification();\n\n  const navigateToListPage = () => {\n    history.push({\n      pathname: routeConstants.ROUTE_URL.COURSES_LIST,\n    });\n  };\n\n  const [courseDetails, setCourseDetails] = useState({});\n\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    courseDetails,\n    validateCourseForm,\n    navigateToListPage,\n    false // determining if values of form control should be cleared\n  );\n\n  const {\n    title,\n    description,\n    category,\n    author,\n    skills,\n    chapters,\n    priceInRupees,\n    priceAfterDiscount,\n    duration,\n    popularity,\n    imageURL,\n    videoURL,\n  } = values;\n \n  // get all data of course with given id\n  useEffect(() => {\n    showLoader();\n    const courseId = props.match.params.id;\n    coursesApi.getCourseById(\n      courseId,\n      // success callback\n      (response) => {\n        setCourseDetails(response.data);\n        values.title = response.data.title;\n        values.description = response.data.description;\n        values.category = response.data.category;\n        values.author = response.data.author;\n        values.skills = response.data.skills;\n        values.chapters = response.data.chapters;\n        values.priceInRupees = response.data.priceInRupees;\n        values.priceAfterDiscount = response.data.priceAfterDiscount;\n        values.duration = response.data.duration;\n        values.popularity = response.data.popularity;\n        values.imageURL = response.data.imageURL;\n        values.videoURL = response.data.videoURL;\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  }, []);\n\n  const handlePublishedFilterChange = (event) => {\n    setCourseDetails({ ...courseDetails, published: event.target.checked });\n  };\n\n  const editCourseHandler = () => {\n    values.published = courseDetails.published;\n    showLoader();\n    coursesApi.editCourse(\n      courseDetails._id,\n      values,\n      // success callback\n      (response) => {\n        showNotification(\"Course Edited successfully!\");\n        hideLoader();\n        navigateToListPage();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  };\n\n  return (\n    <div className={cssClasses.coursePage}>\n      {/* Header */}\n      <MuiPrimarySearchAppBar isLogoClickable={true} isProfileVisible={true} />\n\n      {/* Main Content */}\n      <main className={cssClasses.coursePageContent}>\n        {isLoading ? (\n          loader\n        ) : (\n          <Fragment>\n            <Button\n              variant=\"contained\"\n              className={classes.backButton}\n              onClick={navigateToListPage}\n            >\n              Go Back\n            </Button>\n            <Typography\n              variant=\"inherit\"\n              component=\"h3\"\n              color=\"secondary\"\n              className={cssClasses.coursePageHeading}\n            >\n              Edit Course\n            </Typography>\n            <form\n              id=\"editCourseForm\"\n              noValidate\n              autoComplete=\"off\"\n              className={cssClasses.courseForm}\n            >\n              <FormControl variant=\"filled\">\n                <InputLabel htmlFor=\"title\" color=\"secondary\">\n                  Title\n                </InputLabel>\n                <FilledInput\n                  id=\"title\"\n                  name=\"title\"\n                  type=\"text\"\n                  value={values.title}\n                  onChange={handleChange}\n                  autoComplete=\"on\"\n                  color=\"secondary\"\n                />\n                {errors.title && (\n                  <div className={cssClasses.error}>{errors.title}</div>\n                )}\n              </FormControl>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                multiline\n                rows={4}\n                label=\"Description\"\n                value={values.description}\n                onChange={handleChange}\n                autoComplete=\"on\"\n                color=\"secondary\"\n                variant=\"filled\"\n              />\n              {errors.description && (\n                <div className={cssClasses.error}>{errors.description}</div>\n              )}\n              <div className={cssClasses.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"category\" color=\"secondary\">\n                    Category\n                  </InputLabel>\n                  <FilledInput\n                    id=\"category\"\n                    name=\"category\"\n                    type=\"text\"\n                    value={values.category}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.category && (\n                    <div className={cssClasses.error}>{errors.category}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"author\" color=\"secondary\">\n                    Author\n                  </InputLabel>\n                  <FilledInput\n                    id=\"author\"\n                    name=\"author\"\n                    type=\"text\"\n                    value={values.author}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.author && (\n                    <div className={cssClasses.error}>{errors.author}</div>\n                  )}\n                </FormControl>\n              </div>\n              <FormControl variant=\"filled\">\n                <InputLabel htmlFor=\"skills\" color=\"secondary\">\n                  Skills\n                </InputLabel>\n                <FilledInput\n                  id=\"skills\"\n                  name=\"skills\"\n                  type=\"text\"\n                  value={values.skills}\n                  onChange={handleChange}\n                  autoComplete=\"on\"\n                  color=\"secondary\"\n                />\n                {errors.skills && (\n                  <div className={cssClasses.error}>{errors.skills}</div>\n                )}\n              </FormControl>\n              <FormControl variant=\"filled\">\n                <InputLabel htmlFor=\"chapters\" color=\"secondary\">\n                  Chapters\n                </InputLabel>\n                <FilledInput\n                  id=\"chapters\"\n                  name=\"chapters\"\n                  type=\"text\"\n                  value={values.chapters}\n                  onChange={handleChange}\n                  autoComplete=\"on\"\n                  color=\"secondary\"\n                />\n                {errors.chapters && (\n                  <div className={cssClasses.error}>{errors.chapters}</div>\n                )}\n              </FormControl>\n              <div className={classes.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"priceInRupees\" color=\"secondary\">\n                    Price before discount (INR)\n                  </InputLabel>\n                  <FilledInput\n                    id=\"priceInRupees\"\n                    name=\"priceInRupees\"\n                    type=\"text\"\n                    value={values.priceInRupees}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.priceInRupees && (\n                    <div className={cssClasses.error}>\n                      {errors.priceInRupees}\n                    </div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"priceAfterDiscount\" color=\"secondary\">\n                    Price after discount (INR)\n                  </InputLabel>\n                  <FilledInput\n                    id=\"priceAfterDiscount\"\n                    name=\"priceAfterDiscount\"\n                    type=\"text\"\n                    value={values.priceAfterDiscount}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.priceAfterDiscount && (\n                    <div className={cssClasses.error}>\n                      {errors.priceAfterDiscount}\n                    </div>\n                  )}\n                </FormControl>\n              </div>\n              <div className={classes.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"duration\" color=\"secondary\">\n                    Duration (min.)\n                  </InputLabel>\n                  <FilledInput\n                    id=\"duration\"\n                    name=\"duration\"\n                    type=\"text\"\n                    value={values.duration}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.duration && (\n                    <div className={cssClasses.error}>{errors.duration}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"popularity\" color=\"secondary\">\n                    Popularity\n                  </InputLabel>\n                  <FilledInput\n                    id=\"popularity\"\n                    name=\"popularity\"\n                    type=\"text\"\n                    value={values.popularity}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.popularity && (\n                    <div className={cssClasses.error}>{errors.popularity}</div>\n                  )}\n                </FormControl>\n              </div>\n              <div className={classes.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"imageURL\" color=\"secondary\">\n                    Image URL\n                  </InputLabel>\n                  <FilledInput\n                    id=\"imageURL\"\n                    name=\"imageURL\"\n                    type=\"text\"\n                    value={values.imageURL}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.imageURL && (\n                    <div className={cssClasses.error}>{errors.imageURL}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"videoURL\" color=\"secondary\">\n                    Video URL\n                  </InputLabel>\n                  <FilledInput\n                    id=\"videoURL\"\n                    name=\"videoURL\"\n                    type=\"text\"\n                    value={values.videoURL}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.videoURL && (\n                    <div className={cssClasses.error}>{errors.videoURL}</div>\n                  )}\n                </FormControl>\n              </div>\n              <FormControlLabel\n                control={\n                  <Switch\n                    id=\"published\"\n                    name=\"published\"\n                    checked={\n                      courseDetails.published ? courseDetails.published : false\n                    }\n                    onChange={handlePublishedFilterChange}\n                    color=\"secondary\"\n                  />\n                }\n                label=\"Published\"\n              />\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"large\"\n                className={`${cssClasses.courseButton} ${cssClasses.formButton}`}\n                onClick={editCourseHandler}\n              >\n                Edit\n              </Button>\n            </form>\n          </Fragment>\n        )}\n        {notification}\n      </main>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default EditPage;\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\add\\AddPage.js",["315"],"import React, { Fragment, useState } from \"react\";\n\n// imports for 3rd party libraries\nimport { useHistory } from \"react-router-dom\";\n\n// imports for routes\nimport * as routeConstants from \"../../../routes/routeConstants\";\n\n// imports for MUI components\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\";\n\n// imports for components from MUI library\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport Button from \"@material-ui/core/Button\";\n\n// imports for custom components\nimport { Footer } from \"../../../components/UI/Footer\";\n\n// imports for custom hooks\nimport { useForm } from \"../../../hooks\";\nimport validateCourseForm from \"../validateCourseForm\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport useNotification from \"../../../hooks/useNotification\";\n\n// imports for styles\nimport classes from \"../Course.module.css\";\nimport { useStyles } from \"../../../styles/formStyles\";\n\n// imports for APIs\nimport * as coursesApi from \"../../../api/coursesApi\";\n\nconst AddPage = () => {\n  // merging all styles imported\n  const cssClasses = { ...classes, ...useStyles() };\n\n  const history = useHistory();\n  const { loader, isLoading, showLoader, hideLoader  } = useLoader();\n  const { notification, showNotification } = useNotification();\n\n  const initialFormValues = {\n    // the keys are similar to `name` attribute provided to form controls\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    author: \"\",\n    skills: \"\",\n    chapters: \"\",\n    duration: \"\",\n    priceInRupees: \"\",\n    priceAfterDiscount: \"\",\n    popularity: \"\",\n    imageURL: \"\",\n    videoURL: \"\",\n  };\n\n  const navigateToListPage = () => {\n    history.push({\n      pathname: routeConstants.ROUTE_URL.COURSES_LIST,\n    });\n  };\n\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    initialFormValues,\n    validateCourseForm,\n    navigateToListPage,\n    false // determining if values of form control should be cleared\n  );\n\n  const {\n    title,\n    description,\n    category,\n    author,\n    skills,\n    chapters,\n    priceInRupees,\n    priceAfterDiscount,\n    duration,\n    popularity,\n    imageURL,\n    videoURL,\n  } = values;\n\n  const [isPublishedFilterOn, setIsPublishedFilterOn] = useState(false);\n\n  const handlePublishedFilterChange = (event) => {\n    setIsPublishedFilterOn(event.target.checked);\n  };\n\n  const addCourseHandler = () => {\n    values.published = isPublishedFilterOn;\n    showLoader();\n    coursesApi.addCourse(\n      values,\n      // success callback\n      (response) => {\n        showNotification(\"Course Added successfully!\");\n        hideLoader();\n        navigateToListPage();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  };\n\n  return (\n    <div className={cssClasses.coursePage}>\n      {/* Header */}\n      <MuiPrimarySearchAppBar isLogoClickable={true} isProfileVisible={true} />\n\n      {/* Main Content */}\n      <main className={cssClasses.coursePageContent}>\n        {isLoading ? (\n          loader\n        ) : (\n          <Fragment>\n            <Button\n              variant=\"contained\"\n              className={classes.backButton}\n              onClick={navigateToListPage}\n            >\n              Go Back\n            </Button>\n            <Typography\n              variant=\"inherit\"\n              component=\"h3\"\n              color=\"secondary\"\n              className={cssClasses.coursePageHeading}\n            >\n              Add Course\n            </Typography>\n            <form\n              id=\"addCourseForm\"\n              noValidate\n              autoComplete=\"off\"\n              className={cssClasses.courseForm}\n            >\n              <FormControl variant=\"filled\">\n                <InputLabel htmlFor=\"title\" color=\"secondary\">\n                  Title\n                </InputLabel>\n                <FilledInput\n                  id=\"title\"\n                  name=\"title\"\n                  type=\"text\"\n                  value={title}\n                  onChange={handleChange}\n                  autoComplete=\"on\"\n                  color=\"secondary\"\n                />\n                {errors.title && (\n                  <div className={cssClasses.error}>{errors.title}</div>\n                )}\n              </FormControl>\n              <TextField\n                id=\"description\"\n                name=\"description\"\n                multiline\n                rows={4}\n                label=\"Description\"\n                value={description}\n                onChange={handleChange}\n                autoComplete=\"on\"\n                color=\"secondary\"\n                variant=\"filled\"\n              />\n              {errors.description && (\n                <div className={cssClasses.error}>{errors.description}</div>\n              )}\n              <div className={cssClasses.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"category\" color=\"secondary\">\n                    Category\n                  </InputLabel>\n                  <FilledInput\n                    id=\"category\"\n                    name=\"category\"\n                    type=\"text\"\n                    value={category}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.category && (\n                    <div className={cssClasses.error}>{errors.category}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"author\" color=\"secondary\">\n                    Author\n                  </InputLabel>\n                  <FilledInput\n                    id=\"author\"\n                    name=\"author\"\n                    type=\"text\"\n                    value={author}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.author && (\n                    <div className={cssClasses.error}>{errors.author}</div>\n                  )}\n                </FormControl>\n              </div>\n              <FormControl variant=\"filled\">\n                <InputLabel htmlFor=\"skills\" color=\"secondary\">\n                  Skills\n                </InputLabel>\n                <FilledInput\n                  id=\"skills\"\n                  name=\"skills\"\n                  type=\"text\"\n                  value={skills}\n                  onChange={handleChange}\n                  autoComplete=\"on\"\n                  color=\"secondary\"\n                />\n                {errors.skills && (\n                  <div className={cssClasses.error}>{errors.skills}</div>\n                )}\n              </FormControl>\n              <FormControl variant=\"filled\">\n                <InputLabel htmlFor=\"chapters\" color=\"secondary\">\n                  Chapters\n                </InputLabel>\n                <FilledInput\n                  id=\"chapters\"\n                  name=\"chapters\"\n                  type=\"text\"\n                  value={chapters}\n                  onChange={handleChange}\n                  autoComplete=\"on\"\n                  color=\"secondary\"\n                />\n                {errors.chapters && (\n                  <div className={cssClasses.error}>{errors.chapters}</div>\n                )}\n              </FormControl>\n              <div className={classes.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"priceInRupees\" color=\"secondary\">\n                    Price before discount (INR)\n                  </InputLabel>\n                  <FilledInput\n                    id=\"priceInRupees\"\n                    name=\"priceInRupees\"\n                    type=\"text\"\n                    value={priceInRupees}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.priceInRupees && (\n                    <div className={cssClasses.error}>\n                      {errors.priceInRupees}\n                    </div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"priceAfterDiscount\" color=\"secondary\">\n                    Price after discount (INR)\n                  </InputLabel>\n                  <FilledInput\n                    id=\"priceAfterDiscount\"\n                    name=\"priceAfterDiscount\"\n                    type=\"text\"\n                    value={priceAfterDiscount}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.priceAfterDiscount && (\n                    <div className={cssClasses.error}>\n                      {errors.priceAfterDiscount}\n                    </div>\n                  )}\n                </FormControl>\n              </div>\n              <div className={classes.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"duration\" color=\"secondary\">\n                    Duration (min.)\n                  </InputLabel>\n                  <FilledInput\n                    id=\"duration\"\n                    name=\"duration\"\n                    type=\"text\"\n                    value={duration}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.duration && (\n                    <div className={cssClasses.error}>{errors.duration}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"popularity\" color=\"secondary\">\n                    Popularity\n                  </InputLabel>\n                  <FilledInput\n                    id=\"popularity\"\n                    name=\"popularity\"\n                    type=\"text\"\n                    value={popularity}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.popularity && (\n                    <div className={cssClasses.error}>{errors.popularity}</div>\n                  )}\n                </FormControl>\n              </div>\n              <div className={classes.controlsGroup}>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"imageURL\" color=\"secondary\">\n                    Image URL\n                  </InputLabel>\n                  <FilledInput\n                    id=\"imageURL\"\n                    name=\"imageURL\"\n                    type=\"text\"\n                    value={imageURL}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.imageURL && (\n                    <div className={cssClasses.error}>{errors.imageURL}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"videoURL\" color=\"secondary\">\n                    Video URL\n                  </InputLabel>\n                  <FilledInput\n                    id=\"videoURL\"\n                    name=\"videoURL\"\n                    type=\"text\"\n                    value={videoURL}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.videoURL && (\n                    <div className={cssClasses.error}>{errors.videoURL}</div>\n                  )}\n                </FormControl>\n              </div>\n              <FormControlLabel\n                control={\n                  <Switch\n                    id=\"published\"\n                    name=\"published\"\n                    checked={isPublishedFilterOn}\n                    value={isPublishedFilterOn}\n                    onChange={handlePublishedFilterChange}\n                    color=\"secondary\"\n                  />\n                }\n                label=\"Published\"\n              />\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"large\"\n                className={`${cssClasses.courseButton} ${cssClasses.formButton}`}\n                onClick={addCourseHandler}\n              >\n                Add\n              </Button>\n            </form>\n          </Fragment>\n        )}\n        {notification}\n      </main>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default AddPage;\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\list\\ListPage.js",["316"],"import React, { useState, useEffect } from \"react\";\n\n// imports for components from MUI library\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n// imports for MUI components\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\";\n\n// imports for custom components\nimport { Footer } from \"../../../components/UI/Footer\";\n\n// imports for custom hooks\nimport useLoader from \"../../../hooks/useLoader\";\nimport useNotification from \"../../../hooks/useNotification\";\nimport { useHistory, Link } from \"react-router-dom\";\n\n// imports for routes\nimport { routeUtils, routeConstants } from \"../../../routes\";\n\n// imports for utils\nimport * as utils from \"../../../utils\";\n\n// imports for APIs\nimport * as coursesApi from \"../../../api/coursesApi\";\n\n// imports for styles\nimport classes from \"./ListPage.module.css\";\n\nconst ListPage = () => {\n  const { loader, isLoading, showLoader, hideLoader } = useLoader();\n  const { notification, showNotification } = useNotification();\n  const history = useHistory();\n\n  const [coursesList, setCoursesList] = useState([]);\n  const [isPublishedFilterOn, setIsPublishedFilterOn] = useState(false);\n\n  const navigateToEditCoursePage = (courseId) => {\n    history.push(routeUtils.getEditPageRouteUrl(courseId)); // redirect to course edit page on click of edit icon\n  };\n\n  const handlePublishedFilterChange = (event) => {\n    setIsPublishedFilterOn(event.target.checked);\n  };\n\n  const getCoursesSuccessCallback = (response) => {\n    setCoursesList(response.data);\n    hideLoader();\n  };\n\n  const getCoursesFailureCallback = (error, errorMessage) => {\n    // show errors from specific to generic\n    if (errorMessage) {\n      showNotification(errorMessage);\n    } else {\n      showNotification(error.toString());\n    }\n    hideLoader();\n  };\n\n  useEffect(() => {\n    showLoader();\n    isPublishedFilterOn\n      ? coursesApi.getAllPublishedCourses(\n          getCoursesSuccessCallback,\n          getCoursesFailureCallback\n        )\n      : coursesApi.getAllCourses(\n          getCoursesSuccessCallback,\n          getCoursesFailureCallback\n        );\n  }, [isPublishedFilterOn]);\n\n  const deleteCourseHandler = (courseId) => {\n    showLoader();\n    coursesApi.deleteCourse(\n      courseId,\n      // success callback\n      (response) => {\n        setCoursesList(coursesList.filter((course) => course._id !== courseId));\n        showNotification(\"Course deleted successfully!\");\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  };\n\n  return (\n    <div className={classes.listPage}>\n      {/* Header */}\n      <MuiPrimarySearchAppBar isProfileVisible={true} />\n\n      {/* Main Content */}\n      <main className={classes.listPageContent}>\n        {/* Table Main Action Header */}\n        <article className={classes.tableMainActionHeader}>\n          <Link to={routeConstants.ROUTE_URL.ADD_COURSE}>\n            <Button variant=\"contained\" color=\"secondary\">\n              <AddIcon />\n              Add Course\n            </Button>\n          </Link>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isPublishedFilterOn}\n                onChange={handlePublishedFilterChange}\n                name=\"publishedCoursesFilter\"\n                color=\"secondary\"\n              />\n            }\n            className={classes.publishedFilter}\n            label=\"Published\"\n          />\n        </article>\n\n        {/* Courses in Tabular Format */}\n        {isLoading ? (\n          <section className={classes.loaderContainer}>{loader}</section>\n        ) : (\n          <TableContainer>\n            <Table aria-label=\"customized table\">\n              <TableHead className={classes.tableHead}>\n                <TableRow>\n                  <TableCell>Course ID</TableCell>\n                  <TableCell>Category</TableCell>\n                  <TableCell>Title</TableCell>\n                  <TableCell>Instructor</TableCell>\n                  <TableCell align=\"right\">\n                    Duration <br />\n                    (in h)\n                  </TableCell>\n                  <TableCell>Published</TableCell>\n                  <TableCell align=\"right\">\n                    Price <br />\n                    (in INR)\n                  </TableCell>\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {coursesList.map((course) => (\n                  <TableRow key={course._id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {course._id}\n                    </TableCell>\n                    <TableCell>{course.category}</TableCell>\n                    <TableCell>{course.title}</TableCell>\n                    <TableCell>{course.author}</TableCell>\n                    <TableCell align=\"right\">\n                      {utils.getFormattedTimeInHoursAndMinutes(course.duration)}\n                    </TableCell>\n                    <TableCell>{course.published ? \"Yes\" : \"No\"}</TableCell>\n                    <TableCell align=\"right\">\n                      {course.priceAfterDiscount?course.priceAfterDiscount.toFixed(2):\"--\"}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <IconButton\n                        aria-label=\"edit course\"\n                        aria-controls=\"admin actions\"\n                        aria-haspopup=\"false\"\n                        color=\"inherit\"\n                        onClick={() => navigateToEditCoursePage(course._id)}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"delete course\"\n                        aria-controls=\"admin actions\"\n                        aria-haspopup=\"false\"\n                        color=\"inherit\"\n                        onClick={() => deleteCourseHandler(course._id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n        {notification}\n      </main>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default ListPage;\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\OnboardPage.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\summary\\SummaryPage.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\details\\DetailsPage.js",["317"],"import React, { useState, useEffect } from \"react\";\n\n// imports for utils\nimport * as utils from \"../../../utils\";\n\n// imports for 3rd party libraries\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// imports for routes\nimport * as routeConstants from \"../../../routes/routeConstants\";\n\n// imports for custom components\nimport { Footer } from \"../../../components/UI/Footer\";\n\n// imports for components from MUI library\nimport Typography from \"@material-ui/core/Typography\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport Button from \"@material-ui/core/Button\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\n\n// imports for MUI components\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\";\n\n// imports for custom hooks\nimport useLoader from \"../../../hooks/useLoader\";\nimport useNotification from \"../../../hooks/useNotification\";\n\n// imports for APIs\nimport * as coursesApi from \"../../../api/coursesApi\";\n\n// imports for styles\nimport classes from \"./DetailsPage.module.css\";\n\nconst DetailsPage = (props) => {\n  const history = useHistory();\n  const { loader, isLoading, showLoader, hideLoader } = useLoader();\n  const { notification, showNotification } = useNotification();\n\n  const [courseDetails, setCourseDetails] = useState({});\n\n  // get all data of course with given id\n  useEffect(() => {\n    showLoader();\n    const courseId = props.match.params.id;\n    coursesApi.getCourseById(\n      courseId,\n      // success callback\n      (response) => {\n        setCourseDetails(JSON.parse(JSON.stringify(response.data)));\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  }, []);\n\n  const openYouTubeVideo = () => {\n    window.open(courseDetails.videoURL);\n  };\n\n  const navigateToCheckoutPage = () => {\n    // set details of selected course in local storage\n    utils.setInLocalStorage(\n      utils.constants.LOCAL_STORAGE_KEY.COURSE,\n      courseDetails\n    );\n    history.push({\n      pathname: routeConstants.ROUTE_URL.CHECKOUT,\n    });\n  };\n\n  const renderSkills =\n    courseDetails &&\n    courseDetails.skills &&\n    JSON.parse(JSON.stringify(courseDetails.skills)).map((skill, index) => {\n      return (\n        <div key={index} className={classes.skill}>\n          <Typography variant=\"inherit\">{skill}</Typography>\n        </div>\n      );\n    });\n\n  const renderChapters =\n    courseDetails &&\n    courseDetails.chapters &&\n    JSON.parse(JSON.stringify(courseDetails.chapters)).map((chapter, index) => {\n      return (\n        <div key={index} className={classes.chapter}>\n          <Typography variant=\"inherit\">{`${\n            index + 1\n          }. ${chapter}`}</Typography>\n        </div>\n      );\n    });\n\n  return (\n    <div className={classes.detailsPage}>\n      <MuiPrimarySearchAppBar isLogoClickable={true} isProfileVisible={true} />\n\n      {isLoading ? (\n        <section className={classes.loaderContainer}>{loader}</section>\n      ) : (\n        <main className={classes.detailsPageContent}>\n          {/* /* Left Column (on large screens only) */}\n          <section>\n            {/* Course Text Details */}\n            <article>\n              <Typography variant=\"inherit\" component=\"h3\" gutterBottom>\n                {courseDetails.title}\n              </Typography>\n              <Typography\n                variant=\"inherit\"\n                component=\"p\"\n                color=\"secondary\"\n                gutterBottom\n              >\n                Course Instructor:{\" \"}\n                <span className={classes.subtitleContent}>\n                  {courseDetails.author}\n                </span>\n              </Typography>\n              <div className={classes.durationAndDateContainer}>\n                <div className={classes.durationContainer}>\n                  <ScheduleIcon color=\"primary\" className={classes.icon} />\n                  <Typography variant=\"inherit\" component=\"p\">\n                    {utils.getFormattedTimeInHoursAndMinutes(\n                      courseDetails.duration\n                    )}\n                  </Typography>\n                </div>\n                <div className={classes.dateContainer}>\n                  <TodayIcon color=\"primary\" className={classes.icon} />\n                  <Typography variant=\"inherit\" component=\"p\">\n                    {utils.getFormattedDate(courseDetails.createdAt)}\n                  </Typography>\n                </div>\n              </div>\n              <Typography\n                variant=\"inherit\"\n                component=\"p\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Category:{\" \"}\n                <span className={classes.subtitleContent}>\n                  {courseDetails.category}\n                </span>\n              </Typography>\n              <Typography variant=\"inherit\" component=\"p\" color=\"textSecondary\">\n                Price:{\" \"}\n                <span className={classes.originalPrice}>\n                  {courseDetails.priceInRupees}\n                </span>\n                &nbsp;\n                <span\n                  className={`${classes.discountedPrice} ${classes.subtitleContent}`}\n                >\n                  {courseDetails.priceAfterDiscount}\n                </span>\n              </Typography>\n\n              {/* Button for preview on YouTube */}\n              <div\n                className={`${classes.previewBtnContainer} ${classes.btnContainer}`}\n              >\n                <Button\n                  variant=\"contained\"\n                  startIcon={<YouTubeIcon color=\"primary\" />}\n                  className={classes.previewButton}\n                  onClick={openYouTubeVideo}\n                >\n                  Preview\n                </Button>\n              </div>\n            </article>\n\n            {/* Skills */}\n            <article>\n              <div className={classes.skillsContainer}>\n                <Typography\n                  variant=\"inherit\"\n                  component=\"h4\"\n                  color=\"secondary\"\n                  gutterBottom\n                >\n                  Skills Covered:\n                </Typography>\n                <div className={classes.skills}>{renderSkills}</div>\n              </div>\n            </article>\n          </section>\n\n          {/* Right Column (on large screens only) */}\n          <section className={classes.rightColumn}>\n            {/* Button for Enrolment */}\n            <div\n              className={`${classes.enrolMeBtnContainer} ${classes.btnContainer}`}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={navigateToCheckoutPage}\n              >\n                Enrol Me\n              </Button>\n            </div>\n\n            {/* Chapters */}\n            <article className={classes.chaptersContainer}>\n              <Typography\n                variant=\"inherit\"\n                component=\"p\"\n                className={classes.chaptersHeading}\n              >\n                Chapters\n              </Typography>\n              <div className={classes.chapters}>{renderChapters}</div>\n            </article>\n          </section>\n          {notification}\n        </main>\n      )}\n\n      <Footer />\n    </div>\n  );\n};\n\nDetailsPage.propTypes = {\n  props: PropTypes.object,\n};\n\nexport default DetailsPage;\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\checkout\\CheckoutPage.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\home\\HomePage.js",["318","319"],"import React, { useState, useEffect } from \"react\";\n\n// imports for 3rd party libraries\nimport { useHistory } from \"react-router\";\n\n// imports for routes\nimport { routeUtils } from \"../../../routes\";\n\n// imports for utils\nimport * as constants from \"../../../utils/constants\";\n\n// imports for components from Material UI library\nimport Typography from \"@material-ui/core/Typography\";\n\n// imports for MUI components\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\";\nimport { EnhancedSingleLineGridList } from \"../../../components/MUI/MuiSingleLineGridList\";\nimport { MuiCard } from \"../../../components/MUI/MuiCard\";\n\n// imports for custom components\nimport { Footer } from \"../../../components/UI/Footer\";\n\n// imports for custom hooks\nimport useLoader from \"../../../hooks/useLoader\";\nimport useNotification from \"../../../hooks/useNotification\";\n\n// imports for APIs\nimport * as coursesApi from \"../../../api/coursesApi\";\n\n// imports for styles\nimport classes from \"./HomePage.module.css\";\n\nconst HomePage = () => {\n  const history = useHistory();\n  const { loader, isLoading, showLoader, hideLoader } = useLoader();\n  const { notification, showNotification } = useNotification();\n\n  const [newCoursesList, setNewCoursesList] = useState([]);\n  const [coursesList, setCoursesList] = useState([]);\n  const [categoryList, setCategoryList] = useState([]);\n\n  const handleTitleSearch = (title) => {\n    showLoader();\n    coursesApi.searchCourseByTitle(\n      title,\n      // success callback\n      (response) => {\n        setCoursesList(response.data);\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  };\n\n  const handleCategorySearch = (category) => {\n    showLoader();\n    coursesApi.getCoursesByCategory(\n      category,\n      // success callback\n      (response) => {\n        setCoursesList(response.data);\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  };\n\n  const showCourseDetailsPage = (courseId) => {\n    history.push(routeUtils.getDetailsPageRouteUrl(courseId)); // redirect to course details page on click of course card\n  };\n\n  // TODO: API pending; get all new courses instead of published courses\n  // get all NEW courses\n  useEffect(() => {\n    showLoader();\n    coursesApi.getAllPublishedCourses(\n      // success callback\n      (response) => {\n        const nNewCourses = response.data.slice(\n          0,\n          constants.SHOW_NEW_COURSES_LIMIT\n        );\n        setNewCoursesList(nNewCourses);\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n\n    //Get all categories\n    showLoader();\n    coursesApi.getAllCategory(\n      // success callback\n      (response) => {\n        setCategoryList(response.data)\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  }, []);\n\n  // get all published courses\n  useEffect(() => {\n    showLoader();\n    coursesApi.getAllPublishedCourses(\n      // success callback\n      (response) => {\n        setCoursesList(response.data);\n        hideLoader();\n      },\n      // failure callback\n      (error, errorMessage) => {\n        // show errors from specific to generic\n        if (errorMessage) {\n          showNotification(errorMessage);\n        } else {\n          showNotification(error.toString());\n        }\n        hideLoader();\n      }\n    );\n  }, []);\n\n  return (\n    <div className={classes.homePage}>\n      {/* Header */}\n      <MuiPrimarySearchAppBar\n        isSearchVisible={true}\n        isCategoriesVisible={true}\n        isProfileVisible={true}\n        handleTitleSearch={handleTitleSearch}\n        handleCategorySearch={handleCategorySearch}\n        categoryList={categoryList}\n      />\n      {isLoading ? (\n        <section className={classes.loaderContainer}>{loader}</section>\n      ) : (\n        <main className={classes.homePageContent}>\n          {/* New Courses */}\n          <section>\n            <div className={classes.titleBar}>\n              <h4>New Courses</h4>\n            </div>\n            {newCoursesList.length > 0 ? (\n              <EnhancedSingleLineGridList\n                data={newCoursesList}\n                handleClick={(course) => showCourseDetailsPage(course._id)}\n              />\n            ) : (\n              <Typography\n                variant=\"inherit\"\n                component=\"h4\"\n                className={classes.noCourseFoundText}\n              >\n                No new course\n              </Typography>\n            )}\n          </section>\n\n          {/* Course Cards */}\n          {coursesList.length > 0 ? (\n            <section className={classes.courseCardsContainer}>\n              {coursesList.map((course) => (\n                <MuiCard\n                  key={course._id}\n                  data={course}\n                  handleClick={() => showCourseDetailsPage(course._id)}\n                />\n              ))}\n            </section>\n          ) : (\n            <Typography\n              variant=\"inherit\"\n              component=\"h4\"\n              className={classes.noCourseFoundText}\n            >\n              No course found\n            </Typography>\n          )}\n          {notification}\n        </main>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport default HomePage;\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\utils\\utils.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\utils\\constants.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\utils-api\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\styles\\formStyles.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Loader\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSnackbar\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\admin\\validateCourseForm.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\coursesApi.js",["320"],"// imports for utils\nimport { utilsApi, apiConstants } from \"./utils-api\";\n// imports for utils\nimport * as utils from \"../utils\";\nvar token ;\n\n/**\n * Function to search for a course\n * @param {String} title - substring which needs to be searched in course title\n * @param {Function} successCallback - callback method to be called when API succeeds\n * @param {Function} failureCallback - callback method to be called when API fails\n * @returns {Array} array of courses whose title contains the given substring (each course is an object consisting of course details)\n */\n\nexport async function searchCourseByTitle(\n  title,\n  successCallback,\n  failureCallback\n) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.GET,\n      apiConstants.COURSES_API_ROUTE.TUTORIALS,\n      null,\n      { title: title },\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\n/**\n * Function to get all courses within a given category\n * @param {String} category - category string corresponding to which courses are to be fetched\n * @param {Function} successCallback - callback method to be called when API succeeds\n * @param {Function} failureCallback - callback method to be called when API fails\n * @returns {Array} array of courses which belong to the given category (each course is an object consisting of course details)\n */\nexport async function getCoursesByCategory(\n  category,\n  successCallback,\n  failureCallback\n) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.GET,\n      apiConstants.COURSES_API_ROUTE.GET_CATEGORY,\n      [category],\n      null,\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\n/**\n * Function to get all courses (published as well as non-published)\n * @param {Function} successCallback - callback method to be called when API succeeds\n * @param {Function} failureCallback - callback method to be called when API fails\n * @returns {Array} array of all courses in the database (each course is an object consisting of course details)\n */\nexport async function getAllCourses(successCallback, failureCallback) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.GET,\n      apiConstants.COURSES_API_ROUTE.TUTORIALS,\n      null,\n      null,\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\n/**\n * Function to get all published courses\n * @param {Function} successCallback - callback method to be called when API succeeds\n * @param {Function} failureCallback - callback method to be called when API fails\n * @returns {Array} array of all published courses in the database (each course is an object consisting of course details)\n */\nexport async function getAllPublishedCourses(successCallback, failureCallback) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.GET,\n      apiConstants.COURSES_API_ROUTE.TUTORIALS,\n      [apiConstants.COURSES_API_PATH_PARAMETER.PUBLISHED],\n      null,\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\n/**\n * Function to get course with given id\n * @param {*} courseId - id of the course to be fetched\n * @param {*} successCallback - callback method to be called when API succeeds\n * @param {*} failureCallback - callback method to be called when API fails\n * @returns {Object} course with given ID\n */\nexport async function getCourseById(\n  courseId,\n  successCallback,\n  failureCallback\n) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.GET,\n      apiConstants.COURSES_API_ROUTE.TUTORIALS,\n      [courseId],\n      null,\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\n/**\n * Function to delete a course with given id\n * @param {*} courseId - id of the course to be deleted\n * @param {*} successCallback - callback method to be called when API succeeds\n * @param {*} failureCallback - callback method to be called when API fails\n */\nexport async function deleteCourse(courseId, successCallback, failureCallback) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.DELETE,\n      apiConstants.COURSES_API_ROUTE.TUTORIALS,\n      [courseId],\n      null,\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\nexport async function addCourse(courseData, successCallback, failureCallback) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.POST,\n      apiConstants.COURSES_API_ROUTE.ADD_COURSE,\n      null,\n      null,\n      courseData,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\nexport async function editCourse(courseId, courseData, successCallback, failureCallback) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.PUT,\n      apiConstants.COURSES_API_ROUTE.TUTORIALS,\n      [courseId],\n      null,\n      courseData,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n\nexport async function getAllCategory(successCallback, failureCallback) {\n  try {\n    await utilsApi.sendApiRequest(\n      apiConstants.HTTP_METHOD.GET,\n      apiConstants.COURSES_API_ROUTE.GET_CATEGORY,\n      null,\n      null,\n      null,\n      {\"x-access-token\" : token},\n      successCallback,\n      failureCallback\n    );\n  } catch (error) {\n    if (failureCallback) {\n      failureCallback(error);\n    }\n  }\n}\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\user\\checkout\\validateCheckoutForm.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\styles.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\utils-api\\apiConstants.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Footer\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiPrimarySearchAppBar\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\utils-api\\utilsApi.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Loader\\Loader.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSnackbar\\MuiSnackbar.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiCard\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSingleLineGridList\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\hooks\\useForm.js",["321","322"],"import { useState, useEffect } from \"react\";\n\nconst useForm = (\n  valuesInitialState, // initial state of form values\n  validate, // function to validate form values\n  successCallback, // callback to be executed when all values of form control are valid (a.k.a. validation is successful)\n  shouldSetValuesToInitialState // whether form values should be set to initial state\n) => {\n  // form values entered on UI\n  const [values, setValues] = useState(valuesInitialState);\n  // form errors based on values entered on UI\n  const [errors, setErrors] = useState({});\n\n  // avoids invoking callback function when the errors object is empty on first page load\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Event handler detecting change in any form control\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    // key in state object = `name` attribute of form control\n    setValues({ ...values, [name]: value });\n  };\n\n  // Event handler detecting click of Submit button inside form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  // clears form values\n  useEffect(() => {\n    shouldSetValuesToInitialState && setValues(valuesInitialState);\n  }, [shouldSetValuesToInitialState]);\n\n  useEffect(() => {\n    // if the submit button is clicked atleast once and there's no error, invoke success callback\n    if (isSubmitting && Object.keys(errors).length === 0 && successCallback) {\n      successCallback(values);\n    }\n  }, [errors]);\n\n  return { values, errors, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\UI\\Footer\\Footer.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiPrimarySearchAppBar\\MuiPrimarySearchAppBar.js",["323","324"],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\api\\axiosConfig.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiCard\\MuiCard.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSingleLineGridList\\SingleLineGridList.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiCard\\styles.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\LoginForm.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiSingleLineGridList\\styles.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiPrimarySearchAppBar\\styles.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\SignupForm.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabs.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\styles.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\validateLoginForm.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\pages\\onboard\\forms\\validateSignupForm.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabPanel\\index.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabPanel\\MuiTabPanel.js",[],"C:\\Users\\Administrator\\OneDrive\\Desktop\\git\\My-git-repository\\Capstone\\Frontend\\src\\components\\MUI\\MuiTabs\\MuiTabPanel\\styles.js",[],{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":3,"column":13,"nodeType":"331","messageId":"332","endLine":3,"endColumn":18},{"ruleId":"329","severity":1,"message":"333","line":55,"column":41,"nodeType":"331","messageId":"332","endLine":55,"endColumn":53},{"ruleId":"329","severity":1,"message":"334","line":63,"column":5,"nodeType":"331","messageId":"332","endLine":63,"endColumn":10},{"ruleId":"329","severity":1,"message":"335","line":64,"column":5,"nodeType":"331","messageId":"332","endLine":64,"endColumn":16},{"ruleId":"329","severity":1,"message":"336","line":65,"column":5,"nodeType":"331","messageId":"332","endLine":65,"endColumn":13},{"ruleId":"329","severity":1,"message":"337","line":66,"column":5,"nodeType":"331","messageId":"332","endLine":66,"endColumn":11},{"ruleId":"329","severity":1,"message":"338","line":67,"column":5,"nodeType":"331","messageId":"332","endLine":67,"endColumn":11},{"ruleId":"329","severity":1,"message":"339","line":68,"column":5,"nodeType":"331","messageId":"332","endLine":68,"endColumn":13},{"ruleId":"329","severity":1,"message":"340","line":69,"column":5,"nodeType":"331","messageId":"332","endLine":69,"endColumn":18},{"ruleId":"329","severity":1,"message":"341","line":70,"column":5,"nodeType":"331","messageId":"332","endLine":70,"endColumn":23},{"ruleId":"329","severity":1,"message":"342","line":71,"column":5,"nodeType":"331","messageId":"332","endLine":71,"endColumn":13},{"ruleId":"329","severity":1,"message":"343","line":72,"column":5,"nodeType":"331","messageId":"332","endLine":72,"endColumn":15},{"ruleId":"329","severity":1,"message":"344","line":73,"column":5,"nodeType":"331","messageId":"332","endLine":73,"endColumn":13},{"ruleId":"329","severity":1,"message":"345","line":74,"column":5,"nodeType":"331","messageId":"332","endLine":74,"endColumn":13},{"ruleId":"346","severity":1,"message":"347","line":111,"column":6,"nodeType":"348","endLine":111,"endColumn":8,"suggestions":"349"},{"ruleId":"329","severity":1,"message":"333","line":69,"column":41,"nodeType":"331","messageId":"332","endLine":69,"endColumn":53},{"ruleId":"346","severity":1,"message":"350","line":83,"column":6,"nodeType":"348","endLine":83,"endColumn":27,"suggestions":"351"},{"ruleId":"346","severity":1,"message":"352","line":65,"column":6,"nodeType":"348","endLine":65,"endColumn":8,"suggestions":"353"},{"ruleId":"346","severity":1,"message":"354","line":135,"column":6,"nodeType":"348","endLine":135,"endColumn":8,"suggestions":"355"},{"ruleId":"346","severity":1,"message":"354","line":157,"column":6,"nodeType":"348","endLine":157,"endColumn":8,"suggestions":"356"},{"ruleId":"329","severity":1,"message":"330","line":4,"column":13,"nodeType":"331","messageId":"332","endLine":4,"endColumn":18},{"ruleId":"346","severity":1,"message":"357","line":35,"column":6,"nodeType":"348","endLine":35,"endColumn":37,"suggestions":"358"},{"ruleId":"346","severity":1,"message":"359","line":42,"column":6,"nodeType":"348","endLine":42,"endColumn":14,"suggestions":"360"},{"ruleId":"329","severity":1,"message":"361","line":17,"column":8,"nodeType":"331","messageId":"332","endLine":17,"endColumn":16},{"ruleId":"329","severity":1,"message":"362","line":88,"column":9,"nodeType":"331","messageId":"332","endLine":88,"endColumn":32},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"no-unused-vars","'utils' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","'title' is assigned a value but never used.","'description' is assigned a value but never used.","'category' is assigned a value but never used.","'author' is assigned a value but never used.","'skills' is assigned a value but never used.","'chapters' is assigned a value but never used.","'priceInRupees' is assigned a value but never used.","'priceAfterDiscount' is assigned a value but never used.","'duration' is assigned a value but never used.","'popularity' is assigned a value but never used.","'imageURL' is assigned a value but never used.","'videoURL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hideLoader', 'props.match.params.id', 'showLoader', 'showNotification', and 'values'. Either include them or remove the dependency array.","ArrayExpression",["365"],"React Hook useEffect has missing dependencies: 'getCoursesFailureCallback', 'getCoursesSuccessCallback', and 'showLoader'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'hideLoader', 'props.match.params.id', 'showLoader', and 'showNotification'. Either include them or remove the dependency array.",["367"],"React Hook useEffect has missing dependencies: 'hideLoader', 'showLoader', and 'showNotification'. Either include them or remove the dependency array.",["368"],["369"],"React Hook useEffect has a missing dependency: 'valuesInitialState'. Either include it or remove the dependency array. If 'setValues' needs the current value of 'valuesInitialState', you can also switch to useReducer instead of useState and read 'valuesInitialState' in the reducer.",["370"],"React Hook useEffect has missing dependencies: 'isSubmitting', 'successCallback', and 'values'. Either include them or remove the dependency array. If 'successCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["371"],"'SendIcon' is defined but never used.","'handleSearchSubmitClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"378","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [hideLoader, props.match.params.id, showLoader, showNotification, values]",{"range":"385","text":"386"},"Update the dependencies array to be: [getCoursesFailureCallback, getCoursesSuccessCallback, isPublishedFilterOn, showLoader]",{"range":"387","text":"388"},"Update the dependencies array to be: [hideLoader, props.match.params.id, showLoader, showNotification]",{"range":"389","text":"390"},"Update the dependencies array to be: [hideLoader, showLoader, showNotification]",{"range":"391","text":"392"},{"range":"393","text":"392"},"Update the dependencies array to be: [shouldSetValuesToInitialState, valuesInitialState]",{"range":"394","text":"395"},"Update the dependencies array to be: [errors, isSubmitting, successCallback, values]",{"range":"396","text":"397"},[3456,3458],"[hideLoader, props.match.params.id, showLoader, showNotification, values]",[2746,2767],"[getCoursesFailureCallback, getCoursesSuccessCallback, isPublishedFilterOn, showLoader]",[1996,1998],"[hideLoader, props.match.params.id, showLoader, showNotification]",[3799,3801],"[hideLoader, showLoader, showNotification]",[4323,4325],[1257,1288],"[shouldSetValuesToInitialState, valuesInitialState]",[1531,1539],"[errors, isSubmitting, successCallback, values]"]